# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""user_tokens"""
type UserToken {
  id: ID!
  user: User!
  token: String!
  refreshToken: String!
  expireAt: String!
  refreshExpireAt: String!
  version: Int!
  description: String!

  """0: ADMIN | 1: STUDENT | 2: LECTURE"""
  role: Int!
}

"""question_images"""
type QuestionImage {
  id: ID!
  name: String!
  question: [Question!]!
}

"""tags"""
type Tag {
  id: ID!
  name: String!
  logo: String!
  description: String!

  """0: FALSE | 1: TRUE"""
  isHidden: Int!
}

"""question_tags"""
type QuestionTag {
  tag: Tag!
  question: Question!
}

"""questions"""
type Question {
  id: ID!
  createUserId: String
  title: String!
  content: String!
  count: Int!
  githubLink: String!

  """0: FALSE | 1: TRUE"""
  isHidden: Int!
  tags: [QuestionTag!]!
  images: [QuestionImage!]!
}

"""user_question_actions"""
type UserQuestionAction {
  """0: NOTHING | 1: LIKE | 2: DISLIKE"""
  actionType: Int!
  question: Question!
  user: User!
}

"""users"""
type User {
  id: ID!
  fullName: String!
  email: String!
  password: String!
  avatar: String
  banner: String
  phoneNumber: String
  description: String

  """0: ADMIN | 1: STUDENT | 2: LECTURE"""
  role: Int!

  """0: Unknow | 1: Male | 2: Female"""
  gender: Int!
  is_valid_email: Int!
  faceRecognitionModel: String
  secret_key: String
  userTokens: [UserToken!]!
  questionActions: [UserQuestionAction!]!
}

type LoginResponseType {
  access_token: String!
  access_token_expire_time: String!
  refresh_token: String!
  refresh_token_expire_time: String!
  user: User!
}

"""answers"""
type Answer {
  id: ID!
  createUserId: String
  content: String!
  count: Int!
  documentLink: String!

  """0: NOTHING | 1: WRONG | 2: CORRECT"""
  isCorrectAnswer: Int!

  """0: FALSE | 1: TRUE"""
  isHidden: Int!
  images: [AnswerImage!]!
}

"""answer_images"""
type AnswerImage {
  id: ID!
  name: String!
  answer: [Answer!]!
}

type Query {
  users: [User!]!
}

type Mutation {
  """User login"""
  login(loginInput: LoginInput!): LoginResponseType!

  """User register"""
  signup(createUserInput: CreateUserInput!): User!

  """Refresh Token"""
  refreshToken(refreshToken: String!): LoginResponseType!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  fullName: String!
  email: String!
  password: String!
}